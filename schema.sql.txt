-- ===================================================================
--      Esquema de Base de Datos para Comuni IA (SQLite)
-- ===================================================================
-- Este archivo representa la estructura final de la base de datos.
-- No es para ejecución directa, sino para consulta y documentación.
-- ===================================================================

-- Tabla de Negocios (Entidad Principal)
CREATE TABLE businesses (
    id INTEGER NOT NULL,
    name VARCHAR(160) NOT NULL,
    description TEXT NOT NULL,
    logo VARCHAR(500),
    location VARCHAR(160) NOT NULL,
    category VARCHAR(100) NOT NULL,
    phone VARCHAR(20),
    latitude REAL,
    longitude REAL,
    email VARCHAR(120),
    whatsapp VARCHAR(20),
    PRIMARY KEY (id)
);

-- Tabla de Usuarios (Dueños, Clientes, Admin)
CREATE TABLE users (
    id INTEGER NOT NULL,
    email VARCHAR(120) NOT NULL,
    password_hash VARCHAR(200) NOT NULL,
    business_id INTEGER,
    role VARCHAR(20),
    created_at DATETIME,
    PRIMARY KEY (id),
    UNIQUE (email),
    FOREIGN KEY(business_id) REFERENCES businesses (id)
);

-- Tabla de Productos (asociados a un negocio)
CREATE TABLE products (
    id INTEGER NOT NULL,
    business_id INTEGER NOT NULL,
    name VARCHAR(160) NOT NULL,
    description TEXT,
    price FLOAT NOT NULL,
    image_url VARCHAR(500),
    PRIMARY KEY (id),
    FOREIGN KEY(business_id) REFERENCES businesses (id)
);

-- Tabla de Reseñas (asociadas a un negocio)
CREATE TABLE reviews (
    id INTEGER NOT NULL,
    business_id INTEGER NOT NULL,
    author VARCHAR(120) NOT NULL,
    rating INTEGER NOT NULL,
    comment TEXT NOT NULL,
    created_at DATETIME,
    PRIMARY KEY (id),
    FOREIGN KEY(business_id) REFERENCES businesses (id)
);

-- Tabla de Favoritos (Relación Muchos a Muchos entre Usuarios y Negocios)
CREATE TABLE favorites (
    user_id INTEGER NOT NULL,
    business_id INTEGER NOT NULL,
    PRIMARY KEY (user_id, business_id),
    FOREIGN KEY(user_id) REFERENCES users (id),
    FOREIGN KEY(business_id) REFERENCES businesses (id)
);

-- Tabla de Vistas (Relación Muchos a Muchos para contar visitas únicas)
CREATE TABLE business_views (
    user_id INTEGER NOT NULL,
    business_id INTEGER NOT NULL,
    PRIMARY KEY (user_id, business_id),
    FOREIGN KEY(user_id) REFERENCES users (id),
    FOREIGN KEY(business_id) REFERENCES businesses (id)
);